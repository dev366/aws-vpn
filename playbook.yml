---
- name: AWS OpenVPN
  hosts: localhost
  become: no
  connection: local
  gather_facts: no
  vars:
    security_group: vpn-server-group
    region: us-west-2

  tasks:
    - name: Create key pair
      ec2_key:
        name: vpn-key
        key_material: '{{ item }}'
        region: '{{ region }}'
        aws_access_key: '{{ ec2_access_key }}'
        aws_secret_key: '{{ ec2_secret_key }}'
      with_file: /Users/pub/.ssh/vpn-key.pub

    - name: Create a security group
      ec2_group:
        aws_access_key: '{{ ec2_access_key }}'
        aws_secret_key: '{{ ec2_secret_key }}'
        name: '{{ security_group }}'
        description: Security Group for VPN Servers
        region: '{{ region }}'
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: udp
            from_port: 1194
            to_port: 1194
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Create EC2 instance
      ec2:
        key_name: vpn-key
        instance_type: t2.micro
        image: ami-01f05461 # Ubuntu Server 14.04 LTS (HVM), SSD Volume Type.
        wait: yes
        # vpc_subnet_id: subnet-29e63245
        # assign_public_ip: yes
        group: '{{ security_group }}'
        region: '{{ region }}'
        aws_access_key: '{{ ec2_access_key }}'
        aws_secret_key: '{{ ec2_secret_key }}'
        instance_tags:
          vpn-server-instance: yes
        exact_count: 1
        count_tag: vpn-server-instance
      register: ec2_info

    # - debug: var=ec2_info

    - name: Add instances to host group
      add_host:
        hostname='{{ item.dns_name }}'
        ansible_host='{{ item.public_ip }}'
        groupname=ec2hosts
        ansible_user=ubuntu
        ansible_ssh_extra_args='-o StrictHostKeyChecking=no'
      with_items: '{{ ec2_info.tagged_instances }}'
      changed_when: false

    - name: Wait for SSH to come up
      wait_for:
        host='{{ item.public_ip }}'
        port=22
        state=started
        search_regex=OpenSSH
      with_items: '{{ ec2_info.tagged_instances }}'

- name: configuration play
  hosts: ec2hosts
  gather_facts: true
  connection: ssh
  become: yes

  tasks:
    - name: Install required packages
      apt: package='{{ item }}' state=installed
      with_items:
        - openvpn
        - easy-rsa

    - name: Copy server.conf to the remote
      template: src='files/server.conf' dest='/etc/openvpn/' owner=root group=root mode=0644

    - name: Turn on IP4 Forwarding
      sysctl: name='net.ipv4.ip_forward' value=1 sysctl_set=yes state=present reload=yes

    # - copy: src='{{ item }}' dest='/etc/openvpn/' remote_src=yes
      # with_fileglob:
        # - '/usr/share/easy-rsa/*'

    - name: Create easy-rsa directory
      file: path='/etc/openvpn/easy-rsa/' state=directory

    - name: Copy easy-rsa files
      copy: src='/usr/share/easy-rsa/{{ item }}' dest='/etc/openvpn/easy-rsa/' remote_src=yes mode=a+rwx
      with_items:
        - build-ca
        - build-dh
        - build-inter
        - build-key
        - build-key-pass
        - build-key-pkcs12
        - build-key-server
        - build-req
        - build-req-pass
        - clean-all
        - inherit-inter
        - list-crl
        - openssl-0.9.6.cnf
        - openssl-0.9.8.cnf
        - openssl-1.0.0.cnf
        - pkitool
        - revoke-full
        - sign-req
        - whichopensslcnf

    - name: Generate Diffie-Hellman key
      command: creates=/etc/openvpn/dh2048.pem openssl dhparam -out /etc/openvpn/dh2048.pem 2048

    - name: Copy vars file
      template: src='files/vars' dest='/etc/openvpn/easy-rsa/' owner=root group=root mode=0644
    - name: Create keys directory
      file: path='/etc/openvpn/easy-rsa/keys/' state=directory mode=go-rwx
    - name: Create keys/index.txt file
      copy: content='' dest='/etc/openvpn/easy-rsa/keys/index.txt' force=no
    - name: Create keys/serial file
      copy: content='01' dest='/etc/openvpn/easy-rsa/keys/serial' force=no
    - name: Run easy-rsa/build-ca script
      shell: chdir=/etc/openvpn/easy-rsa creates=/etc/openvpn/easy-rsa/keys/ca.key . ./vars && ./build-ca --batch
    - name: Run easy-rsa/build-key-server
      shell: chdir=/etc/openvpn/easy-rsa creates=/etc/openvpn/easy-rsa/keys/server.key . ./vars && ./build-key-server --batch server

    - name: Install keys
      copy: src='/etc/openvpn/easy-rsa/keys/{{ item }}' dest='/etc/openvpn' remote_src=yes
      with_items:
        - server.crt
        - server.key
        - ca.crt

    - name: Start OpenVPN service
      service: name=openvpn state=started
